import HomeSceren from '../../Pages/HomeScreen'
import dotenv from 'dotenv'
import SettingsScreen from '../../Pages/SettingsScreen'
import VoiceAndAudioSettingsScreen from '../../Pages/VoiceAndAudioSettingsScreen'
import VIOSettingsScreen from '../../Pages/VIOSettingsScreen'
import LoginScreen from '../../Pages/LoginScreen'
import CorePage from '../../Pages/CorePage'
import { ANCHOR_WORDS } from '../../Data/Headers'
dotenv.config()

describe('Anchor Words', () => {

    before(async () => {
        await driver.pushFile('/storage/emulated/0/Android/data/com.honeywell.VIO/files/Configuration/Microservices.config', process.env.LICENSE)
        
        await expect($(HomeSceren.bugerButton)).toBeDisplayed()
        await expect($(HomeSceren.licenseOk)).toBeDisplayed()
        await HomeSceren.tapOnBurgerButton()
        await HomeSceren.tapOnSettings()
        await SettingsScreen.tapOnVoiceAndAudioMenu()
        await VoiceAndAudioSettingsScreen.disableVoiceRecognition()
        await driver.back()
        await SettingsScreen.tapOnVIOSettings()
        //await VIOSettingsScreen.disableBackwardCompatibility()
        await VIOSettingsScreen.disableServerSecureConnector()
        await VIOSettingsScreen.fillVIOSettings(process.env.LUT, process.env.ODR, process.env.ERROR, process.env.HOST)
        await SettingsScreen.tapOnBAckButton()
        await HomeSceren.tapOnBurgerButton()
        await SettingsScreen.tapOnHomeMenu()
        await driver.pushFile('/storage/emulated/0/Android/data/com.honeywell.VIO/files/Configuration/OnetimeStartupSettings.config', process.env.CONFIG_FILE)
        await driver.back()
        await HomeSceren.tapOnReadyButton()
        

    })

    beforeEach(async () => {
        await LoginScreen.loginUser(process.env.USER, process.env.PASSWORD)
        await expect($(LoginScreen.loadingSpinner)).toBeDisplayed()
    })

    it('VOSMB-5161 - Anchor Words - Happy path', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(12345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
        await CorePage.writeNumber(1.2345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(12)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
    })

    it('VOSMB-5162 - Anchor Words - Temperature - Negative Values', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(-14)
        await CorePage.tapOnReady()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(12345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
        await CorePage.writeNumber(1.2345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(12)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
    })

    it('VOSMB-5163 - Anchor Words - Temperature - Float Values', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14.5)
        await CorePage.tapOnReady()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
    })

    it('VOSMB-5166 - Anchor Words - Temperature - More digits', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(123)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(-1234)
        await CorePage.tapOnReady()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(12345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
        await CorePage.writeNumber(1.2345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(12)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
    })

    it('VOSMB-5188 - Anchor Words - Size - Negative Values', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(-12345)
        await CorePage.tapOnReady()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(12345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
        await CorePage.writeNumber(1.2345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)

    })

    it('VOSMB-5189 - Anchor Words - Size - Float Values', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(1.2345)
        await CorePage.tapOnReady()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(12345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
        await CorePage.writeNumber(1.2345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
    })

    it('VOSMB-5190 - Anchor Words - Size - More digits', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(123456)
        await CorePage.tapOnReady()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(12345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
    })

    it('VOSMB-5192 - Anchor Words - Size / Float Digits - Negative Values', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(12345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
        await CorePage.writeNumber(-123.45)
        await CorePage.tapOnReady()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
        await CorePage.writeNumber(12.345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
    })

    it('VOSMB-5193 - Anchor Words - Size / Float Values - Integer value', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(12345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
        await CorePage.writeNumber(1000)
        await CorePage.tapOnReady()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
    })

    it.only('VOSMB-6030 - Anchor Word-Previous Anchor Selected Parameter as 1 w/ Backward ON', async () => {
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
        await CorePage.writeNumber(14)
        await CorePage.tapOnReady()
        await CorePage.tapOnYes()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Quantity)
        await CorePage.writeNumber(12345)
        await CorePage.tapOnReady()
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Float)
        await CorePage.writeNumber(1000)
        await CorePage.tapOnReady()
        await driver.pause(3000)
        await expect($(CorePage.header)).toHaveText(ANCHOR_WORDS.Temperature)
    })

    afterEach(async ()=> {
        await CorePage.tapOnThreeDots()
        await CorePage.tapOnSingOff()
        await CorePage.tapOnYesSignOff()
        await expect($(LoginScreen.loginButton)).toBeDisplayed()
    })

    after(async ()=> {
        await driver.removeApp(process.env.APPPACKAGE)
    })
})
